name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_exports_usd:
        required: true
        type: string
      watched_outlook:
        required: true
        type: string
    secrets:
      token:
        required: true


jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}
          ref: ${{ inputs.target_branch }}


      - name: Save old file version
        run: |
          if [ -f "${{ inputs.file_path }}" ]; then
            cp "${{ inputs.file_path }}" old.yml
          else
            echo "{}" > old.yml
          fi


      - name: Save new file version
        run: |
          cp "${{ inputs.file_path }}" new.yml

      - name: 🔍 Watched Key Values from gym_buddy and Mail_bot
        run: |
          pip install pyyaml --quiet
          python3 <<EOF
          import yaml

          def get_nested(data, key_path):
              keys = key_path.strip().split(".")
              for key in keys:
                  if isinstance(data, dict) and key in data:
                      data = data[key]
                  else:
                      return None
              return data

          watched_keys = yaml.safe_load("""${{ inputs.watched_keys }}""")

          print("🔍 Watched Key Values from gym_buddy:")
          with open("new.yml") as f:
              data = yaml.safe_load(f) or {}
          for top, subs in watched_keys.items():
              for sub in subs:
                  val = get_nested(data, f"{top}.{sub}")
                  print(f"➡️  {top}.{sub} = {val}")

          print("📬 Mail Bot values:")
          with open("old.yml") as f:
              data = yaml.safe_load(f) or {}
          for top, subs in watched_keys.items():
              for sub in subs:
                  val = get_nested(data, f"{top}.{sub}")
                  print(f"➡️  {top}.{sub} = {val}")
          EOF
      

      - name: Compare watched keys using shared script
        id: check_keys
        run: |
          pip install pyyaml --quiet
          export WATCHED_KEYS='${{ inputs.watched_keys }}'
          python3 compare_keys.py
      
      

      - name: Exit if no relevant changes
        if: steps.check_keys.outputs.no_change == 'true'
        run: |
          echo "✅ No watched keys changed. Skipping PR."
          exit 0

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "${{ inputs.file_path }}" || echo "⚠️ Nothing to add"
          git diff --cached --quiet || git commit -m "${{ inputs.commit_message }}"
          git push


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.token }}
          commit-message: ${{ inputs.commit_message }}
          title: "Automated PR from workflow"
          body: "This PR was created automatically because watched keys were updated."
          branch: auto/pr-${{ github.run_id }}
