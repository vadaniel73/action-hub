name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_keys:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}
          ref: ${{ inputs.target_branch }}

      - name: Save old file version
        run: |
          cp ${{ inputs.file_path }} old.yml || echo "{}" > old.yml

      - name: Simulate file update (replace this with your actual update)
        run: |
          echo "# Simulating file update" >> ${{ inputs.file_path }}

      - name: Save new file version
        run: |
          cp ${{ inputs.file_path }} new.yml

      - name: Compare watched keys using Python
        id: check_keys
        run: |
          echo "Comparing watched keys..."
          pip install pyyaml --quiet

          python3 <<EOF
          import yaml

          with open("old.yml") as f:
              old = yaml.safe_load(f) or {}

          with open("new.yml") as f:
              new = yaml.safe_load(f) or {}

          def get_nested(data, key_path):
              keys = key_path.strip().split(".")
              for key in keys:
                  if isinstance(data, dict) and key in data:
                      data = data[key]
                  else:
                      return None
              return data

          watched_keys = "${{ inputs.watched_keys }}".split(",")
          changed = []

          for key in watched_keys:
              key = key.strip()
              if not key:
                  continue
              old_val = get_nested(old, key)
              new_val = get_nested(new, key)
              if old_val != new_val:
                  print(f"ðŸ”º Changed: {key} â€” '{old_val}' â†’ '{new_val}'")
                  changed.append(key)

          if changed:
              with open(os.environ["GITHUB_OUTPUT"], "a") as out:
                  out.write("no_change=false\n")
          else:
              print("âœ… No watched keys changed.")
              with open(os.environ["GITHUB_OUTPUT"], "a") as out:
                  out.write("no_change=true\n")
          EOF

      - name: Exit if no relevant changes
        if: steps.check_keys.outputs.no_change == 'true'
        run: |
          echo "â›” No watched keys changed. Skipping PR."
          exit 0

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ inputs.file_path }}
          git commit -m "${{ inputs.commit_message }}"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.token }}
          commit-message: ${{ inputs.commit_message }}
          title: "Automated PR from workflow"
          body: "File has been updated."
          branch: auto/pr-${{ github.run_id }}
