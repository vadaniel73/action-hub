name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_keys:
        required: true
        type: string  # Comma-separated keys (e.g. "a.b,c.d.e")
    secrets:
      token:
        required: true  

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}  
          ref: ${{ inputs.target_branch }}

      - name: Install yq
        run: |
          YQ_VERSION=v4.43.1
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O /usr/bin/yq
          chmod +x /usr/bin/yq
          yq --version

      - name: Save old file version
        run: |
          cp ${{ inputs.file_path }} old.yml || echo "{}" > old.yml

      - name: Fetch updated file (simulate updated content)
        run: |
          echo "🔁 Simulating update for PR creation (in real use, update would come from source repo)"
          echo "# dummy overwrite" >> ${{ inputs.file_path }}

      - name: Save new file version
        run: |
          cp ${{ inputs.file_path }} new.yml

      - name: Parse watched_keys and check for changes
        id: check_keys
        run: |
          echo "Checking for key differences..."
          IFS=',' read -ra keys <<< "${{ inputs.watched_keys }}"
          changed_keys=()

          for key_path in "${keys[@]}"; do
            old_val=$(yq eval ".$key_path" old.yml 2>/dev/null || echo "null")
            new_val=$(yq eval ".$key_path" new.yml 2>/dev/null || echo "null")

            if [ "$old_val" != "$new_val" ]; then
              echo "🔺 Change detected in: $key_path"
              changed_keys+=("$key_path")
            fi
          done

          if [ ${#changed_keys[@]} -eq 0 ]; then
            echo "✅ No relevant changes found. Exiting."
            echo "no_change=true" >> $GITHUB_OUTPUT
          else
            echo "🟠 Changes detected. Continuing workflow."
            echo "no_change=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no change
        if: steps.check_keys.outputs.no_change == 'true'
        run: |
          echo "No watched keys were changed. Skipping PR."
          exit 0

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ inputs.file_path }}
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "${{ inputs.commit_message }}"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.token }}  
          commit-message: ${{ inputs.commit_message }}
          title: "Automated PR from workflow"
          body: "File has been updated."
          branch: auto/pr-${{ github.event.repository.name }}-${{ github.run_number }}
