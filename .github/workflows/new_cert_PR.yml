name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_exports_usd:
        required: true
        type: string
      watched_outlook:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}
          ref: ${{ inputs.target_branch }}
          fetch-depth: 0  # Required for branch operations

      - name: 🔍 Compare watched keys
        id: compare_keys
        run: |
          pip install ruamel.yaml --quiet
          
          python3 <<EOF
          from ruamel.yaml import YAML
          import os

          yaml = YAML()
          yaml.preserve_quotes = True

          # Load current file
          with open("${{ inputs.file_path }}") as f:
              mail_data = yaml.load(f) or {}

          # Get current values
          current_exports = str(mail_data.get('trade', {}).get('exports_usd', ''))
          current_outlook = str(mail_data.get('summary', {}).get('outlook', ''))

          # Compare values
          changes = []
          if "${{ inputs.watched_exports_usd }}" != current_exports:
              changes.append("trade.exports_usd")
          if "${{ inputs.watched_outlook }}" != current_outlook:
              changes.append("summary.outlook")

          # Set outputs
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"changes={','.join(changes) if changes else 'none'}\n")
              f.write(f"no_change={'true' if not changes else 'false'}\n")
          EOF

      - name: 🚫 Skip if no changes
        if: steps.compare_keys.outputs.no_change == 'true'
        run: |
          echo "✅ No changes detected in watched keys"
          echo "EXIT_CODE=0" >> $GITHUB_ENV

      - name: 🪄 Create update branch
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          # Generate branch name with incrementing number
          MAX=$(git ls-remote --heads origin "refs/heads/auto-update-*" | awk -F'auto-update-' '{print $2}' | sort -n | tail -n 1)
          NEXT=$(( ${MAX:-0} + 1 ))
          BRANCH_NAME="auto-update-$NEXT"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b "$BRANCH_NAME"

      - name: ✍️ Update YAML file
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          pip install ruamel.yaml --quiet
          
          python3 <<EOF
          from ruamel.yaml import YAML
          import sys

          yaml = YAML()
          yaml.preserve_quotes = True
          yaml.width = 4096  # Prevent line wrapping

          # Load and update file
          with open("${{ inputs.file_path }}", "r") as f:
              data = yaml.load(f) or {}

          if "trade.exports_usd" in "${{ steps.compare_keys.outputs.changes }}":
              data.setdefault('trade', {})['exports_usd'] = "${{ inputs.watched_exports_usd }}"
          
          if "summary.outlook" in "${{ steps.compare_keys.outputs.changes }}":
              data.setdefault('summary', {})['outlook'] = "${{ inputs.watched_outlook }}"

          # Write back with original formatting
          with open("${{ inputs.file_path }}", "w") as f:
              yaml.dump(data, f)
          EOF

      - name: 📌 Commit and push changes
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          git add "${{ inputs.file_path }}"
          git commit -m "${{ inputs.commit_message }}"
          git push origin "$BRANCH_NAME"

      - name: 🎉 Create Pull Request
        if: steps.compare_keys.outputs.no_change == 'false'
        id: create_pr
        run: |
          # Create PR and capture URL (compatible with all gh versions)
          PR_URL=$(gh pr create \
            --base "${{ inputs.target_branch }}" \
            --head "$BRANCH_NAME" \
            --title "Auto-update: ${{ inputs.commit_message }}" \
            --body "Automated PR updating watched values\n\nChanges:\n${{ steps.compare_keys.outputs.changes }}")
          
          # Extract PR number from URL (e.g., https://github.com/owner/repo/pull/123 → 123)
          PR_NUMBER=$(echo "$PR_URL" | awk -F'/' '{print $NF}')
          
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.token }}

      - name: 📊 PR Summary
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          echo "🚀 Pull Request Created Successfully"
          echo "🔗 PR URL: ${{ steps.create_pr.outputs.PR_URL }}"
          echo "🔢 PR Number: ${{ steps.create_pr.outputs.PR_NUMBER }}"