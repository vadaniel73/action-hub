name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_exports_usd:
        required: true
        type: string
      watched_outlook:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}
          ref: ${{ inputs.target_branch }}

      - name: 🔍 Compare watched keys and print values
        id: compare_keys
        run: |
          echo "📥 Installing ruamel.yaml..."
          pip install ruamel.yaml --quiet

          echo "🔍 Fetching and comparing values..."
          python3 <<EOF
          from ruamel.yaml import YAML
          import os

          def get_nested(data, key_path):
              keys = key_path.strip().split(".")
              for key in keys:
                  if isinstance(data, dict) and key in data:
                      data = data[key]
                  else:
                      return None
              return data

          yaml = YAML()
          yaml.preserve_quotes = True

          file_path = "${{ inputs.file_path }}"
          with open(file_path) as f:
              mail_data = yaml.load(f) or {}

          # Incoming values from gym_buddy
          gym_exports = """${{ inputs.watched_exports_usd }}"""
          gym_outlook = """${{ inputs.watched_outlook }}"""

          # Values in Mail_bot
          mail_exports = get_nested(mail_data, "trade.exports_usd")
          mail_outlook = get_nested(mail_data, "summary.outlook")

          print("\n📊 Watched Keys:")
          print(f"➡️ gym_buddy: trade.exports_usd = {gym_exports}")
          print(f"➡️ Mail_bot : trade.exports_usd = {mail_exports}")
          print(f"➡️ gym_buddy: summary.outlook   = {gym_outlook}")
          print(f"➡️ Mail_bot : summary.outlook   = {mail_outlook}\n")

          changes = []

          if gym_exports != str(mail_exports):
              print("🔺 Detected change in: trade.exports_usd")
              changes.append("trade.exports_usd")

          if gym_outlook != str(mail_outlook):
              print("🔺 Detected change in: summary.outlook")
              changes.append("summary.outlook")

          if changes:
              print(f"✅ Changes detected: {changes}")
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write("no_change=false\n")
          else:
              print("✅ No changes in watched keys.")
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write("no_change=true\n")
          EOF
      
