name: Create PR

on:
  workflow_call:
    inputs:
      target_repo:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      commit_message:
        required: true
        type: string
      file_path:
        required: true
        type: string
      watched_exports_usd:
        required: true
        type: string
      watched_outlook:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    env:
      PR_BRANCH: auto/pr-${{ github.run_id }}
    steps:
      - name: 📥 Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          token: ${{ secrets.token }}
          ref: ${{ inputs.target_branch }}

      - name: 🔍 Watched Key Values from gym_buddy and Mail_bot
        id: compare_keys
        run: |
          echo "🔍 Watched Key Values from gym_buddy:"
          echo "➡️  trade.exports_usd = ${{ inputs.watched_exports_usd }}"
          echo "➡️  summary.outlook   = ${{ inputs.watched_outlook }}"

          pip install pyyaml --quiet

          python3 <<EOF
          import yaml
          import os
          
          def get_nested(data, key_path):
              keys = key_path.strip().split(".")
              for key in keys:
                  if isinstance(data, dict) and key in data:
                      data = data[key]
                  else:
                      return None
              return data
          
          with open("${{ inputs.file_path }}") as f:
              mail_data = yaml.safe_load(f) or {}
          
          gym_exports = """${{ inputs.watched_exports_usd }}"""
          gym_outlook = """${{ inputs.watched_outlook }}"""
          mail_exports = get_nested(mail_data, "trade.exports_usd")
          mail_outlook = get_nested(mail_data, "summary.outlook")
          
          print("📬 Watched Key Values from Mail_bot:")
          print(f"➡️  trade.exports_usd = {mail_exports}")
          print(f"➡️  summary.outlook   = {mail_outlook}")
          
          changes = []
          
          if gym_exports != str(mail_exports):
              print("🔺 trade.exports_usd has changed.")
              changes.append("trade.exports_usd")
          if gym_outlook != str(mail_outlook):
              print("🔺 summary.outlook has changed.")
              changes.append("summary.outlook")
          
          if changes:
              print(f"✅ Changes detected: {changes}")
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write("no_change=false\n")
          else:
              print("✅ No watched key changes. Everything is up to date.")
              with open(os.environ["GITHUB_OUTPUT"], "a") as f:
                  f.write("no_change=true\n")
          EOF

      - name: 🚫 Skip if no changes
        if: steps.compare_keys.outputs.no_change == 'true'
        run: echo "✅ No changes detected. Skipping PR creation."

      - name: ✅ Update YAML if changes detected
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          echo "📦 Updating Mail_bot file with new values from gym_buddy..."
          pip install ruamel.yaml --quiet

          python3 <<EOF
          from ruamel.yaml import YAML
          from pathlib import Path

          yaml = YAML()
          yaml.preserve_quotes = True

          file_path = Path("${{ inputs.file_path }}")
          data = yaml.load(file_path)

          # Set values while preserving structure
          data.setdefault("trade", {})["exports_usd"] = """${{ inputs.watched_exports_usd }}"""
          data.setdefault("summary", {})["outlook"] = """${{ inputs.watched_outlook }}"""

          yaml.dump(data, file_path)
          EOF
      

      - name: 🔁 Commit and push changes
        if: steps.compare_keys.outputs.no_change == 'false'
        run: |
          echo "🔢 Generating auto-incremented branch name..."
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git fetch origin

          MAX=$(git ls-remote --heads origin "refs/heads/value_change_gym_*" \
            | sed 's|.*/value_change_gym_||' \
            | sort -n \
            | tail -n 1)

          if [[ -z "$MAX" ]]; then
            NEXT=1
          else
            NEXT=$((MAX + 1))
          fi

          BRANCH_NAME="value_change_gym_${NEXT}"
          echo "🆕 Branch: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          git checkout -b $BRANCH_NAME

          git status
          git diff
          git add "${{ inputs.file_path }}"

          if git diff --cached --quiet; then
            echo "❌ No staged changes to commit. Skipping commit and PR."
            exit 0
          fi

          git commit -m "${{ inputs.commit_message }}"
          git push --set-upstream origin $BRANCH_NAME
      
      

      - name: 🚀 Create Pull Request
        if: steps.compare_keys.outputs.no_change == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.token }}
          commit-message: ${{ inputs.commit_message }}
          title: "🔄 Auto PR: Updated watched keys from gym_buddy"
          body: 'This PR updates `trade.exports_usd` and/or `summary.outlook` from gym_buddy.'
          branch: ${{ env.BRANCH_NAME }}

